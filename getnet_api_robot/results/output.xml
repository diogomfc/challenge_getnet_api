<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.4 on win32)" generated="20220816 13:13:43.663" rpa="false" schemaversion="3">
<suite id="s1" name="Getnet Api Robot" source="H:\WWW\TESTES-QA\GETNET\challenge_getnet_api\getnet_api_robot">
<suite id="s1-s1" name="suitesTests" source="H:\WWW\TESTES-QA\GETNET\challenge_getnet_api\getnet_api_robot\suitesTests">
<suite id="s1-s1-s1" name="TestDeleteUser" source="H:\WWW\TESTES-QA\GETNET\challenge_getnet_api\getnet_api_robot\suitesTests\TestDeleteUser.robot">
<test id="s1-s1-s1-t1" name="Deve Excluir um registro de usuário dado id valido então retorna status 204" line="8">
<kw name="Dado o endereço da API" library="stepDELETE">
<kw name="Start Session" library="base">
<kw name="Create Session" library="RequestsLibrary">
<arg>GETNET_API_ROBOT</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220816 13:13:44.382" level="INFO">Creating Session using : alias=GETNET_API_ROBOT, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220816 13:13:44.381" endtime="20220816 13:13:44.383"/>
</kw>
<status status="PASS" starttime="20220816 13:13:44.381" endtime="20220816 13:13:44.383"/>
</kw>
<status status="PASS" starttime="20220816 13:13:44.380" endtime="20220816 13:13:44.383"/>
</kw>
<kw name="Quando realizar uma requisição para excluir um cadastro de usuário com id valido" library="stepDELETE">
<kw name="DELETE" library="REST">
<arg>${ENDPOINT_DELETE}</arg>
<tag>http</tag>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<status status="PASS" starttime="20220816 13:13:44.385" endtime="20220816 13:13:45.113"/>
</kw>
<status status="PASS" starttime="20220816 13:13:44.384" endtime="20220816 13:13:45.114"/>
</kw>
<kw name="Então a API irá retornar os dados da exclusão respondendo o código 204" library="stepDELETE">
<kw name="Validate status code 204" library="stepDELETE">
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>204</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220816 13:13:45.116" endtime="20220816 13:13:45.118"/>
</kw>
<kw name="Output" library="REST">
<arg>response status</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:13:45.119" level="INFO">
204</msg>
<status status="PASS" starttime="20220816 13:13:45.118" endtime="20220816 13:13:45.132"/>
</kw>
<kw name="REST Instances" library="REST">
<arg>${OUTPUTDIR}/rest.delete_user.json</arg>
<tag>I/O</tag>
<doc>*Writes the instances as JSON to a file.*</doc>
<status status="PASS" starttime="20220816 13:13:45.133" endtime="20220816 13:13:45.134"/>
</kw>
<kw name="Output" library="REST">
<arg>$</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:13:45.135" level="INFO">
""</msg>
<status status="PASS" starttime="20220816 13:13:45.135" endtime="20220816 13:13:45.138"/>
</kw>
<status status="PASS" starttime="20220816 13:13:45.115" endtime="20220816 13:13:45.138"/>
</kw>
<status status="PASS" starttime="20220816 13:13:45.115" endtime="20220816 13:13:45.139"/>
</kw>
<tag>delete</tag>
<status status="PASS" starttime="20220816 13:13:44.377" endtime="20220816 13:13:45.140"/>
</test>
<doc>Suite de testes PATCH</doc>
<status status="PASS" starttime="20220816 13:13:43.705" endtime="20220816 13:13:45.143"/>
</suite>
<suite id="s1-s1-s2" name="TestGetUser" source="H:\WWW\TESTES-QA\GETNET\challenge_getnet_api\getnet_api_robot\suitesTests\TestGetUser.robot">
<test id="s1-s1-s2-t1" name="Deve listar todos usuários da página 2 então retorna status 200" line="8">
<kw name="Dado o endereço da API" library="stepGET">
<kw name="Start Session" library="base">
<kw name="Create Session" library="RequestsLibrary">
<arg>GETNET_API_ROBOT</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220816 13:13:45.169" level="INFO">Creating Session using : alias=GETNET_API_ROBOT, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220816 13:13:45.169" endtime="20220816 13:13:45.170"/>
</kw>
<status status="PASS" starttime="20220816 13:13:45.168" endtime="20220816 13:13:45.171"/>
</kw>
<status status="PASS" starttime="20220816 13:13:45.167" endtime="20220816 13:13:45.171"/>
</kw>
<kw name="Quando realizar uma requisição para listar todos os usuários" library="stepGET">
<kw name="GET" library="REST">
<arg>${ENDPOINT_LIST_USERS}</arg>
<tag>http</tag>
<doc>*Sends a GET request to the endpoint.*</doc>
<status status="PASS" starttime="20220816 13:13:45.173" endtime="20220816 13:13:45.636"/>
</kw>
<status status="PASS" starttime="20220816 13:13:45.172" endtime="20220816 13:13:45.636"/>
</kw>
<kw name="Então a API irá retornar os dados correspondentes respondendo o código 200" library="stepGET">
<kw name="Validate status code 200" library="stepGET">
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220816 13:13:45.638" endtime="20220816 13:13:45.639"/>
</kw>
<kw name="Output" library="REST">
<arg>response status</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:13:45.640" level="INFO">
200</msg>
<status status="PASS" starttime="20220816 13:13:45.639" endtime="20220816 13:13:45.641"/>
</kw>
<kw name="Output" library="REST">
<arg>$</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:13:45.642" level="INFO">
{
    "page": 2,
    "per_page": 6,
    "total": 12,
    "total_pages": 2,
    "data": [
        {
            "id": 7,
            "email": "michael.lawson@reqres.in",
            "first_name": "Michael",
            "last_name": "Lawson",
            "avatar": "https://reqres.in/img/faces/7-image.jpg"
        },
        {
            "id": 8,
            "email": "lindsay.ferguson@reqres.in",
            "first_name": "Lindsay",
            "last_name": "Ferguson",
            "avatar": "https://reqres.in/img/faces/8-image.jpg"
        },
        {
            "id": 9,
            "email": "tobias.funke@reqres.in",
            "first_name": "Tobias",
            "last_name": "Funke",
            "avatar": "https://reqres.in/img/faces/9-image.jpg"
        },
        {
            "id": 10,
            "email": "byron.fields@reqres.in",
            "first_name": "Byron",
            "last_name": "Fields",
            "avatar": "https://reqres.in/img/faces/10-image.jpg"
        },
        {
            "id": 11,
            "email": "george.edwards@reqres.in",
            "first_name": "George",
            "last_name": "Edwards",
            "avatar": "https://reqres.in/img/faces/11-image.jpg"
        },
        {
            "id": 12,
            "email": "rachel.howell@reqres.in",
            "first_name": "Rachel",
            "last_name": "Howell",
            "avatar": "https://reqres.in/img/faces/12-image.jpg"
        }
    ],
    "support": {
        "url": "https://reqres.in/#support-heading",
        "text": "To keep ReqRes free, contributions towards server costs are appreciated!"
    }
}</msg>
<status status="PASS" starttime="20220816 13:13:45.642" endtime="20220816 13:13:45.651"/>
</kw>
<status status="PASS" starttime="20220816 13:13:45.637" endtime="20220816 13:13:45.652"/>
</kw>
<status status="PASS" starttime="20220816 13:13:45.637" endtime="20220816 13:13:45.652"/>
</kw>
<tag>get</tag>
<status status="PASS" starttime="20220816 13:13:45.164" endtime="20220816 13:13:45.653"/>
</test>
<test id="s1-s1-s2-t2" name="Deve consultar usuário dado id valido então retorna status 200" line="14">
<kw name="Dado o endereço da API" library="stepGET">
<kw name="Start Session" library="base">
<kw name="Create Session" library="RequestsLibrary">
<arg>GETNET_API_ROBOT</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220816 13:13:45.659" level="INFO">Creating Session using : alias=GETNET_API_ROBOT, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220816 13:13:45.659" endtime="20220816 13:13:45.661"/>
</kw>
<status status="PASS" starttime="20220816 13:13:45.658" endtime="20220816 13:13:45.662"/>
</kw>
<status status="PASS" starttime="20220816 13:13:45.658" endtime="20220816 13:13:45.662"/>
</kw>
<kw name="Quando realizar uma requisição passando o ID do usuário" library="stepGET">
<kw name="GET" library="REST">
<arg>${ENDPOINT_SINGLE_USER}</arg>
<tag>http</tag>
<doc>*Sends a GET request to the endpoint.*</doc>
<status status="PASS" starttime="20220816 13:13:45.664" endtime="20220816 13:14:07.382"/>
</kw>
<status status="PASS" starttime="20220816 13:13:45.663" endtime="20220816 13:14:07.382"/>
</kw>
<kw name="Então a API irá retornar os dados do usuário correspondente retornando o código 200" library="stepGET">
<kw name="Validate status code 200" library="stepGET">
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220816 13:14:07.386" endtime="20220816 13:14:07.387"/>
</kw>
<kw name="Output" library="REST">
<arg>response status</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:07.388" level="INFO">
200</msg>
<status status="PASS" starttime="20220816 13:14:07.388" endtime="20220816 13:14:07.389"/>
</kw>
<kw name="Output" library="REST">
<arg>$</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:07.391" level="INFO">
{
    "data": {
        "id": 4,
        "email": "eve.holt@reqres.in",
        "first_name": "Eve",
        "last_name": "Holt",
        "avatar": "https://reqres.in/img/faces/4-image.jpg"
    },
    "support": {
        "url": "https://reqres.in/#support-heading",
        "text": "To keep ReqRes free, contributions towards server costs are appreciated!"
    }
}</msg>
<status status="PASS" starttime="20220816 13:14:07.390" endtime="20220816 13:14:07.394"/>
</kw>
<status status="PASS" starttime="20220816 13:14:07.384" endtime="20220816 13:14:07.395"/>
</kw>
<status status="PASS" starttime="20220816 13:14:07.383" endtime="20220816 13:14:07.395"/>
</kw>
<tag>get</tag>
<status status="PASS" starttime="20220816 13:13:45.656" endtime="20220816 13:14:07.396"/>
</test>
<test id="s1-s1-s2-t3" name="Não deve consultar usuário dado id inválido então retorna status 404" line="20">
<kw name="Dado o endereço da API" library="stepGET">
<kw name="Start Session" library="base">
<kw name="Create Session" library="RequestsLibrary">
<arg>GETNET_API_ROBOT</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220816 13:14:07.401" level="INFO">Creating Session using : alias=GETNET_API_ROBOT, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220816 13:14:07.400" endtime="20220816 13:14:07.403"/>
</kw>
<status status="PASS" starttime="20220816 13:14:07.400" endtime="20220816 13:14:07.403"/>
</kw>
<status status="PASS" starttime="20220816 13:14:07.399" endtime="20220816 13:14:07.403"/>
</kw>
<kw name="Quando realizar uma requisição passando um ID inválido" library="stepGET">
<kw name="GET" library="REST">
<arg>${ENDPOINT_SINGLE_USER_NOT_FOUND}</arg>
<tag>http</tag>
<doc>*Sends a GET request to the endpoint.*</doc>
<status status="PASS" starttime="20220816 13:14:07.405" endtime="20220816 13:14:08.080"/>
</kw>
<status status="PASS" starttime="20220816 13:14:07.404" endtime="20220816 13:14:08.080"/>
</kw>
<kw name="Então a API não deve retornar os dados de usuário respondendo o código 404" library="stepGET">
<kw name="Validate status code 404" library="stepGET">
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>404</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220816 13:14:08.082" endtime="20220816 13:14:08.083"/>
</kw>
<kw name="Output" library="REST">
<arg>response status</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:08.084" level="INFO">
404</msg>
<status status="PASS" starttime="20220816 13:14:08.084" endtime="20220816 13:14:08.085"/>
</kw>
<kw name="Output" library="REST">
<arg>$</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:08.086" level="INFO">
{}</msg>
<status status="PASS" starttime="20220816 13:14:08.086" endtime="20220816 13:14:08.087"/>
</kw>
<status status="PASS" starttime="20220816 13:14:08.082" endtime="20220816 13:14:08.088"/>
</kw>
<status status="PASS" starttime="20220816 13:14:08.081" endtime="20220816 13:14:08.088"/>
</kw>
<tag>get</tag>
<status status="PASS" starttime="20220816 13:14:07.398" endtime="20220816 13:14:08.089"/>
</test>
<test id="s1-s1-s2-t4" name="Deve listar todos usuários desconhecidos então retorna status 200" line="26">
<kw name="Dado o endereço da API" library="stepGET">
<kw name="Start Session" library="base">
<kw name="Create Session" library="RequestsLibrary">
<arg>GETNET_API_ROBOT</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220816 13:14:08.094" level="INFO">Creating Session using : alias=GETNET_API_ROBOT, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220816 13:14:08.093" endtime="20220816 13:14:08.095"/>
</kw>
<status status="PASS" starttime="20220816 13:14:08.093" endtime="20220816 13:14:08.096"/>
</kw>
<status status="PASS" starttime="20220816 13:14:08.092" endtime="20220816 13:14:08.096"/>
</kw>
<kw name="Quando realizar uma requisição para listar os usuários desconhecidos" library="stepGET">
<kw name="GET" library="REST">
<arg>${ENDPOINT_LIST_RESOURCE}</arg>
<tag>http</tag>
<doc>*Sends a GET request to the endpoint.*</doc>
<status status="PASS" starttime="20220816 13:14:08.097" endtime="20220816 13:14:08.543"/>
</kw>
<status status="PASS" starttime="20220816 13:14:08.097" endtime="20220816 13:14:08.543"/>
</kw>
<kw name="Então a API irá retornar os dados dos usuários desconhecidos respondendo o código 200" library="stepGET">
<kw name="Validate status code 200" library="stepGET">
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220816 13:14:08.546" endtime="20220816 13:14:08.548"/>
</kw>
<kw name="Output" library="REST">
<arg>response status</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:08.549" level="INFO">
200</msg>
<status status="PASS" starttime="20220816 13:14:08.548" endtime="20220816 13:14:08.550"/>
</kw>
<kw name="Output" library="REST">
<arg>$</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:08.551" level="INFO">
{
    "page": 1,
    "per_page": 6,
    "total": 12,
    "total_pages": 2,
    "data": [
        {
            "id": 1,
            "name": "cerulean",
            "year": 2000,
            "color": "#98B2D1",
            "pantone_value": "15-4020"
        },
        {
            "id": 2,
            "name": "fuchsia rose",
            "year": 2001,
            "color": "#C74375",
            "pantone_value": "17-2031"
        },
        {
            "id": 3,
            "name": "true red",
            "year": 2002,
            "color": "#BF1932",
            "pantone_value": "19-1664"
        },
        {
            "id": 4,
            "name": "aqua sky",
            "year": 2003,
            "color": "#7BC4C4",
            "pantone_value": "14-4811"
        },
        {
            "id": 5,
            "name": "tigerlily",
            "year": 2004,
            "color": "#E2583E",
            "pantone_value": "17-1456"
        },
        {
            "id": 6,
            "name": "blue turquoise",
            "year": 2005,
            "color": "#53B0AE",
            "pantone_value": "15-5217"
        }
    ],
    "support": {
        "url": "https://reqres.in/#support-heading",
        "text": "To keep ReqRes free, contributions towards server costs are appreciated!"
    }
}</msg>
<status status="PASS" starttime="20220816 13:14:08.551" endtime="20220816 13:14:08.561"/>
</kw>
<status status="PASS" starttime="20220816 13:14:08.545" endtime="20220816 13:14:08.561"/>
</kw>
<status status="PASS" starttime="20220816 13:14:08.544" endtime="20220816 13:14:08.562"/>
</kw>
<tag>get</tag>
<status status="PASS" starttime="20220816 13:14:08.091" endtime="20220816 13:14:08.562"/>
</test>
<test id="s1-s1-s2-t5" name="Deve consultar usuário desconhecido dado id valido então retorna status 200" line="32">
<kw name="Dado o endereço da API" library="stepGET">
<kw name="Start Session" library="base">
<kw name="Create Session" library="RequestsLibrary">
<arg>GETNET_API_ROBOT</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220816 13:14:08.568" level="INFO">Creating Session using : alias=GETNET_API_ROBOT, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220816 13:14:08.567" endtime="20220816 13:14:08.569"/>
</kw>
<status status="PASS" starttime="20220816 13:14:08.566" endtime="20220816 13:14:08.570"/>
</kw>
<status status="PASS" starttime="20220816 13:14:08.566" endtime="20220816 13:14:08.570"/>
</kw>
<kw name="Quando realizar uma requisição passando o ID do usuário desconhecido" library="stepGET">
<kw name="GET" library="REST">
<arg>${ENDPOINT_SINGLE_RESOURCE}</arg>
<tag>http</tag>
<doc>*Sends a GET request to the endpoint.*</doc>
<status status="PASS" starttime="20220816 13:14:08.571" endtime="20220816 13:14:51.365"/>
</kw>
<status status="PASS" starttime="20220816 13:14:08.571" endtime="20220816 13:14:51.366"/>
</kw>
<kw name="Então a API irá retornar os dados do usuário desconhecido correspondente retornando o código 200" library="stepGET">
<kw name="Validate status code 200" library="stepGET">
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220816 13:14:51.368" endtime="20220816 13:14:51.369"/>
</kw>
<kw name="Output" library="REST">
<arg>response status</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:51.369" level="INFO">
200</msg>
<status status="PASS" starttime="20220816 13:14:51.369" endtime="20220816 13:14:51.373"/>
</kw>
<kw name="Output" library="REST">
<arg>$</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:51.374" level="INFO">
{
    "data": {
        "id": 2,
        "name": "fuchsia rose",
        "year": 2001,
        "color": "#C74375",
        "pantone_value": "17-2031"
    },
    "support": {
        "url": "https://reqres.in/#support-heading",
        "text": "To keep ReqRes free, contributions towards server costs are appreciated!"
    }
}</msg>
<status status="PASS" starttime="20220816 13:14:51.373" endtime="20220816 13:14:51.378"/>
</kw>
<status status="PASS" starttime="20220816 13:14:51.367" endtime="20220816 13:14:51.379"/>
</kw>
<status status="PASS" starttime="20220816 13:14:51.367" endtime="20220816 13:14:51.380"/>
</kw>
<tag>get</tag>
<status status="PASS" starttime="20220816 13:14:08.564" endtime="20220816 13:14:51.381"/>
</test>
<test id="s1-s1-s2-t6" name="Não deve consultar usuário desconhecido dado id inválido então retorna status 404" line="38">
<kw name="Dado o endereço da API" library="stepGET">
<kw name="Start Session" library="base">
<kw name="Create Session" library="RequestsLibrary">
<arg>GETNET_API_ROBOT</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220816 13:14:51.387" level="INFO">Creating Session using : alias=GETNET_API_ROBOT, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220816 13:14:51.386" endtime="20220816 13:14:51.388"/>
</kw>
<status status="PASS" starttime="20220816 13:14:51.386" endtime="20220816 13:14:51.388"/>
</kw>
<status status="PASS" starttime="20220816 13:14:51.385" endtime="20220816 13:14:51.389"/>
</kw>
<kw name="Quando realizar uma requisição passando um ID inválido do usuário desconhecido" library="stepGET">
<kw name="GET" library="REST">
<arg>${ENDPOINT_SINGLE_RESOURCE_NOT_FOUND}</arg>
<tag>http</tag>
<doc>*Sends a GET request to the endpoint.*</doc>
<status status="PASS" starttime="20220816 13:14:51.390" endtime="20220816 13:14:52.118"/>
</kw>
<status status="PASS" starttime="20220816 13:14:51.389" endtime="20220816 13:14:52.119"/>
</kw>
<kw name="Então a API não deve retornar dados de usuário desconhecido respondendo o código 404" library="stepGET">
<kw name="Validate status code 404" library="stepGET">
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>404</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220816 13:14:52.121" endtime="20220816 13:14:52.122"/>
</kw>
<kw name="Output" library="REST">
<arg>response status</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:52.123" level="INFO">
404</msg>
<status status="PASS" starttime="20220816 13:14:52.122" endtime="20220816 13:14:52.125"/>
</kw>
<kw name="Output" library="REST">
<arg>$</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:52.126" level="INFO">
{}</msg>
<status status="PASS" starttime="20220816 13:14:52.125" endtime="20220816 13:14:52.128"/>
</kw>
<status status="PASS" starttime="20220816 13:14:52.120" endtime="20220816 13:14:52.128"/>
</kw>
<status status="PASS" starttime="20220816 13:14:52.119" endtime="20220816 13:14:52.129"/>
</kw>
<tag>get</tag>
<status status="PASS" starttime="20220816 13:14:51.383" endtime="20220816 13:14:52.130"/>
</test>
<test id="s1-s1-s2-t7" name="Deve listar todos usuários com delay então retorna status 200" line="44">
<kw name="Dado o endereço da API" library="stepGET">
<kw name="Start Session" library="base">
<kw name="Create Session" library="RequestsLibrary">
<arg>GETNET_API_ROBOT</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220816 13:14:52.136" level="INFO">Creating Session using : alias=GETNET_API_ROBOT, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220816 13:14:52.135" endtime="20220816 13:14:52.138"/>
</kw>
<status status="PASS" starttime="20220816 13:14:52.134" endtime="20220816 13:14:52.138"/>
</kw>
<status status="PASS" starttime="20220816 13:14:52.133" endtime="20220816 13:14:52.138"/>
</kw>
<kw name="Quando realizar uma requisição para listar todos os usuários com delay" library="stepGET">
<kw name="GET" library="REST">
<arg>${ENDPOINT_DELAYED_RESPONSE}</arg>
<tag>http</tag>
<doc>*Sends a GET request to the endpoint.*</doc>
<status status="PASS" starttime="20220816 13:14:52.139" endtime="20220816 13:14:55.826"/>
</kw>
<status status="PASS" starttime="20220816 13:14:52.139" endtime="20220816 13:14:55.827"/>
</kw>
<kw name="Então a API irá retornar dados dos usuários com delay respondendo o código 200" library="stepGET">
<kw name="Validate status code 200" library="stepGET">
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220816 13:14:55.829" endtime="20220816 13:14:55.830"/>
</kw>
<kw name="Output" library="REST">
<arg>response status</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:55.831" level="INFO">
200</msg>
<status status="PASS" starttime="20220816 13:14:55.831" endtime="20220816 13:14:55.833"/>
</kw>
<kw name="Output" library="REST">
<arg>$</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:55.834" level="INFO">
{
    "page": 1,
    "per_page": 6,
    "total": 12,
    "total_pages": 2,
    "data": [
        {
            "id": 1,
            "email": "george.bluth@reqres.in",
            "first_name": "George",
            "last_name": "Bluth",
            "avatar": "https://reqres.in/img/faces/1-image.jpg"
        },
        {
            "id": 2,
            "email": "janet.weaver@reqres.in",
            "first_name": "Janet",
            "last_name": "Weaver",
            "avatar": "https://reqres.in/img/faces/2-image.jpg"
        },
        {
            "id": 3,
            "email": "emma.wong@reqres.in",
            "first_name": "Emma",
            "last_name": "Wong",
            "avatar": "https://reqres.in/img/faces/3-image.jpg"
        },
        {
            "id": 4,
            "email": "eve.holt@reqres.in",
            "first_name": "Eve",
            "last_name": "Holt",
            "avatar": "https://reqres.in/img/faces/4-image.jpg"
        },
        {
            "id": 5,
            "email": "charles.morris@reqres.in",
            "first_name": "Charles",
            "last_name": "Morris",
            "avatar": "https://reqres.in/img/faces/5-image.jpg"
        },
        {
            "id": 6,
            "email": "tracey.ramos@reqres.in",
            "first_name": "Tracey",
            "last_name": "Ramos",
            "avatar": "https://reqres.in/img/faces/6-image.jpg"
        }
    ],
    "support": {
        "url": "https://reqres.in/#support-heading",
        "text": "To keep ReqRes free, contributions towards server costs are appreciated!"
    }
}</msg>
<status status="PASS" starttime="20220816 13:14:55.833" endtime="20220816 13:14:55.843"/>
</kw>
<status status="PASS" starttime="20220816 13:14:55.828" endtime="20220816 13:14:55.843"/>
</kw>
<status status="PASS" starttime="20220816 13:14:55.827" endtime="20220816 13:14:55.844"/>
</kw>
<tag>get</tag>
<status status="PASS" starttime="20220816 13:14:52.132" endtime="20220816 13:14:55.844"/>
</test>
<doc>Suite de testes GET</doc>
<status status="PASS" starttime="20220816 13:13:45.148" endtime="20220816 13:14:55.846"/>
</suite>
<suite id="s1-s1-s3" name="TestPatchUser" source="H:\WWW\TESTES-QA\GETNET\challenge_getnet_api\getnet_api_robot\suitesTests\TestPatchUser.robot">
<test id="s1-s1-s3-t1" name="Deve Atualizar o cadastro do usuário dado name e job então retorna status 200" line="8">
<kw name="Dado o endereço da API" library="stepPATCH">
<kw name="Start Session" library="base">
<kw name="Create Session" library="RequestsLibrary">
<arg>GETNET_API_ROBOT</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220816 13:14:55.862" level="INFO">Creating Session using : alias=GETNET_API_ROBOT, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220816 13:14:55.861" endtime="20220816 13:14:55.864"/>
</kw>
<status status="PASS" starttime="20220816 13:14:55.861" endtime="20220816 13:14:55.864"/>
</kw>
<status status="PASS" starttime="20220816 13:14:55.860" endtime="20220816 13:14:55.865"/>
</kw>
<kw name="Quando realizar uma requisição alterando o cadastro do usuário para name: Diogo Silva , Job: Analista QA" library="stepPATCH" sourcename="Quando realizar uma requisição alterando o cadastro do usuário para name: ${name} , Job: ${job}">
<kw name="PATCH" library="REST">
<arg>${ENDPOINT_UPDATE}</arg>
<arg>{"name": "${name}", "job": "${job}"}</arg>
<tag>http</tag>
<doc>*Sends a PATCH request to the endpoint.*</doc>
<status status="PASS" starttime="20220816 13:14:55.866" endtime="20220816 13:14:56.543"/>
</kw>
<status status="PASS" starttime="20220816 13:14:55.865" endtime="20220816 13:14:56.543"/>
</kw>
<kw name="Então a API irá retornar os dados alterados respondendo o código 200" library="stepPATCH">
<kw name="Validate status code 200" library="stepPATCH">
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220816 13:14:56.544" endtime="20220816 13:14:56.546"/>
</kw>
<kw name="Output" library="REST">
<arg>response status</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:56.547" level="INFO">
200</msg>
<status status="PASS" starttime="20220816 13:14:56.546" endtime="20220816 13:14:56.549"/>
</kw>
<kw name="Output" library="REST">
<arg>$</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:56.550" level="INFO">
{
    "name": "Diogo Silva",
    "job": "Analista QA",
    "updatedAt": "2022-08-16T16:14:57.838Z"
}</msg>
<status status="PASS" starttime="20220816 13:14:56.550" endtime="20220816 13:14:56.552"/>
</kw>
<status status="PASS" starttime="20220816 13:14:56.544" endtime="20220816 13:14:56.553"/>
</kw>
<status status="PASS" starttime="20220816 13:14:56.543" endtime="20220816 13:14:56.553"/>
</kw>
<tag>patch</tag>
<status status="PASS" starttime="20220816 13:14:55.859" endtime="20220816 13:14:56.554"/>
</test>
<doc>Suite de testes PATCH</doc>
<status status="PASS" starttime="20220816 13:14:55.849" endtime="20220816 13:14:56.556"/>
</suite>
<suite id="s1-s1-s4" name="TestPostUser" source="H:\WWW\TESTES-QA\GETNET\challenge_getnet_api\getnet_api_robot\suitesTests\TestPostUser.robot">
<test id="s1-s1-s4-t1" name="Quando cadastro um novo usuário dado name e job então retorna status 201" line="8">
<kw name="Dado o endereço da API" library="stepPOST">
<kw name="Start Session" library="base">
<kw name="Create Session" library="RequestsLibrary">
<arg>GETNET_API_ROBOT</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220816 13:14:56.577" level="INFO">Creating Session using : alias=GETNET_API_ROBOT, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220816 13:14:56.576" endtime="20220816 13:14:56.578"/>
</kw>
<status status="PASS" starttime="20220816 13:14:56.576" endtime="20220816 13:14:56.579"/>
</kw>
<status status="PASS" starttime="20220816 13:14:56.575" endtime="20220816 13:14:56.579"/>
</kw>
<kw name="Quando realizar uma requisição para cadastrar um usuário" library="stepPOST">
<kw name="POST" library="REST">
<arg>${ENDPOINT_CREATE}</arg>
<arg>${GET_NEW_USER_JSON}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220816 13:14:56.581" endtime="20220816 13:14:57.244"/>
</kw>
<status status="PASS" starttime="20220816 13:14:56.580" endtime="20220816 13:14:57.244"/>
</kw>
<kw name="Então a API irá retornar os dados do cadastro respondendo o código 201" library="stepPOST">
<kw name="Validate status code 201" library="stepPOST">
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>201</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220816 13:14:57.247" endtime="20220816 13:14:57.249"/>
</kw>
<kw name="Output" library="REST">
<arg>response status</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:57.250" level="INFO">
201</msg>
<status status="PASS" starttime="20220816 13:14:57.249" endtime="20220816 13:14:57.252"/>
</kw>
<status status="PASS" starttime="20220816 13:14:57.246" endtime="20220816 13:14:57.252"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/new_user.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:57.254" level="INFO">
{
    "name": "Sylmara Rodrigues",
    "job": "leader",
    "id": "966",
    "createdAt": "2022-08-16T16:14:58.538Z"
}</msg>
<status status="PASS" starttime="20220816 13:14:57.253" endtime="20220816 13:14:57.257"/>
</kw>
<status status="PASS" starttime="20220816 13:14:57.244" endtime="20220816 13:14:57.257"/>
</kw>
<tag>post</tag>
<status status="PASS" starttime="20220816 13:14:56.574" endtime="20220816 13:14:57.258"/>
</test>
<test id="s1-s1-s4-t2" name="Quando registro um usuário dado e-mail e password então retorna status 200" line="14">
<kw name="Dado o endereço da API" library="stepPOST">
<kw name="Start Session" library="base">
<kw name="Create Session" library="RequestsLibrary">
<arg>GETNET_API_ROBOT</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220816 13:14:57.267" level="INFO">Creating Session using : alias=GETNET_API_ROBOT, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220816 13:14:57.266" endtime="20220816 13:14:57.269"/>
</kw>
<status status="PASS" starttime="20220816 13:14:57.265" endtime="20220816 13:14:57.269"/>
</kw>
<status status="PASS" starttime="20220816 13:14:57.264" endtime="20220816 13:14:57.269"/>
</kw>
<kw name="Quando realizar uma requisição para registrar um usuário com e-mail e password validos" library="stepPOST">
<kw name="POST" library="REST">
<arg>${ENDPOINT_REGISTER_SUCCESSFUL}</arg>
<arg>${GET_REGISTER_USER_JSON}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220816 13:14:57.271" endtime="20220816 13:14:57.963"/>
</kw>
<status status="PASS" starttime="20220816 13:14:57.270" endtime="20220816 13:14:57.963"/>
</kw>
<kw name="Então a API irá retornar id e token do registro respondendo o código 200" library="stepPOST">
<kw name="Validate status code 200" library="stepPOST">
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220816 13:14:57.966" endtime="20220816 13:14:57.967"/>
</kw>
<kw name="Output" library="REST">
<arg>response status</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:57.968" level="INFO">
200</msg>
<status status="PASS" starttime="20220816 13:14:57.967" endtime="20220816 13:14:57.968"/>
</kw>
<status status="PASS" starttime="20220816 13:14:57.964" endtime="20220816 13:14:57.969"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/new_register_user.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:14:57.969" level="INFO">
{
    "id": 4,
    "token": "QpwL5tke4Pnpja7X4"
}</msg>
<status status="PASS" starttime="20220816 13:14:57.969" endtime="20220816 13:14:57.972"/>
</kw>
<status status="PASS" starttime="20220816 13:14:57.964" endtime="20220816 13:14:57.973"/>
</kw>
<tag>post</tag>
<status status="PASS" starttime="20220816 13:14:57.261" endtime="20220816 13:14:57.973"/>
</test>
<test id="s1-s1-s4-t3" name="Quando efetuo login dado email e password validos então retorna status 200" line="20">
<kw name="Dado o endereço da API" library="stepPOST">
<kw name="Start Session" library="base">
<kw name="Create Session" library="RequestsLibrary">
<arg>GETNET_API_ROBOT</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220816 13:14:57.979" level="INFO">Creating Session using : alias=GETNET_API_ROBOT, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220816 13:14:57.978" endtime="20220816 13:14:57.981"/>
</kw>
<status status="PASS" starttime="20220816 13:14:57.978" endtime="20220816 13:14:57.982"/>
</kw>
<status status="PASS" starttime="20220816 13:14:57.977" endtime="20220816 13:14:57.982"/>
</kw>
<kw name="Quando realizar uma requisição para efetuar o login com e-mail e password validos" library="stepPOST">
<kw name="POST" library="REST">
<arg>${ENDPOINT_LOGIN_SUCCESSFUL}</arg>
<arg>${GET_LOGIN_USER_JSON}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220816 13:14:57.983" endtime="20220816 13:15:19.707"/>
</kw>
<status status="PASS" starttime="20220816 13:14:57.983" endtime="20220816 13:15:19.707"/>
</kw>
<kw name="Então a API irá retornar o token do login respondendo o código 200" library="stepPOST">
<kw name="Validate status code 200" library="stepPOST">
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220816 13:15:19.709" endtime="20220816 13:15:19.710"/>
</kw>
<kw name="Output" library="REST">
<arg>response status</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:15:19.711" level="INFO">
200</msg>
<status status="PASS" starttime="20220816 13:15:19.710" endtime="20220816 13:15:19.713"/>
</kw>
<status status="PASS" starttime="20220816 13:15:19.708" endtime="20220816 13:15:19.714"/>
</kw>
<kw name="Output" library="REST" type="TEARDOWN">
<arg>response body</arg>
<arg>${OUTPUTDIR}/new_login_user.json</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:15:19.715" level="INFO">
{
    "token": "QpwL5tke4Pnpja7X4"
}</msg>
<status status="PASS" starttime="20220816 13:15:19.714" endtime="20220816 13:15:19.717"/>
</kw>
<status status="PASS" starttime="20220816 13:15:19.708" endtime="20220816 13:15:19.718"/>
</kw>
<tag>post</tag>
<status status="PASS" starttime="20220816 13:14:57.975" endtime="20220816 13:15:19.718"/>
</test>
<test id="s1-s1-s4-t4" name="Não deve registrar um novo usuário dado password vazio então retorna status 400" line="26">
<kw name="Dado o endereço da API" library="stepPOST">
<kw name="Start Session" library="base">
<kw name="Create Session" library="RequestsLibrary">
<arg>GETNET_API_ROBOT</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220816 13:15:19.725" level="INFO">Creating Session using : alias=GETNET_API_ROBOT, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220816 13:15:19.724" endtime="20220816 13:15:19.726"/>
</kw>
<status status="PASS" starttime="20220816 13:15:19.723" endtime="20220816 13:15:19.726"/>
</kw>
<status status="PASS" starttime="20220816 13:15:19.722" endtime="20220816 13:15:19.726"/>
</kw>
<kw name="Quando realizar uma requisição para rgistrar um usuário com password vazio" library="stepPOST">
<kw name="POST" library="REST">
<arg>${ENDPOINT_REGISTER_SUCCESSFUL}</arg>
<arg>${GET_LOGIN_USER_JSON.replace("password", "")}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220816 13:15:19.727" endtime="20220816 13:15:20.457"/>
</kw>
<status status="PASS" starttime="20220816 13:15:19.727" endtime="20220816 13:15:20.457"/>
</kw>
<kw name="Então a API irá retornar error respondendo o código 400" library="stepPOST">
<kw name="Validate status code 400" library="stepPOST">
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>400</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220816 13:15:20.459" endtime="20220816 13:15:20.460"/>
</kw>
<kw name="Output" library="REST">
<arg>response status</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:15:20.461" level="INFO">
400</msg>
<status status="PASS" starttime="20220816 13:15:20.460" endtime="20220816 13:15:20.462"/>
</kw>
<kw name="Output" library="REST">
<arg>$</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:15:20.463" level="INFO">
{
    "error": "Missing password"
}</msg>
<status status="PASS" starttime="20220816 13:15:20.462" endtime="20220816 13:15:20.465"/>
</kw>
<status status="PASS" starttime="20220816 13:15:20.458" endtime="20220816 13:15:20.466"/>
</kw>
<status status="PASS" starttime="20220816 13:15:20.458" endtime="20220816 13:15:20.466"/>
</kw>
<tag>post</tag>
<status status="PASS" starttime="20220816 13:15:19.720" endtime="20220816 13:15:20.466"/>
</test>
<test id="s1-s1-s4-t5" name="Não deve efetuar login dado password vazio então retorna status 400" line="32">
<kw name="Dado o endereço da API" library="stepPOST">
<kw name="Start Session" library="base">
<kw name="Create Session" library="RequestsLibrary">
<arg>GETNET_API_ROBOT</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220816 13:15:20.472" level="INFO">Creating Session using : alias=GETNET_API_ROBOT, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220816 13:15:20.471" endtime="20220816 13:15:20.473"/>
</kw>
<status status="PASS" starttime="20220816 13:15:20.471" endtime="20220816 13:15:20.473"/>
</kw>
<status status="PASS" starttime="20220816 13:15:20.470" endtime="20220816 13:15:20.473"/>
</kw>
<kw name="Quando realizar uma requisição para efetuar o login com password vazio" library="stepPOST">
<kw name="POST" library="REST">
<arg>${ENDPOINT_LOGIN_UNSUCCESSFUL}</arg>
<arg>${GET_LOGIN_USER_JSON.replace("password", "")}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20220816 13:15:20.474" endtime="20220816 13:15:21.163"/>
</kw>
<status status="PASS" starttime="20220816 13:15:20.474" endtime="20220816 13:15:21.163"/>
</kw>
<kw name="Então a API irá retornar error respondendo o código 400" library="stepPOST">
<kw name="Validate status code 400" library="stepPOST">
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>400</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220816 13:15:21.165" endtime="20220816 13:15:21.167"/>
</kw>
<kw name="Output" library="REST">
<arg>response status</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:15:21.167" level="INFO">
400</msg>
<status status="PASS" starttime="20220816 13:15:21.167" endtime="20220816 13:15:21.168"/>
</kw>
<kw name="Output" library="REST">
<arg>$</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:15:21.169" level="INFO">
{
    "error": "Missing password"
}</msg>
<status status="PASS" starttime="20220816 13:15:21.169" endtime="20220816 13:15:21.171"/>
</kw>
<status status="PASS" starttime="20220816 13:15:21.165" endtime="20220816 13:15:21.171"/>
</kw>
<status status="PASS" starttime="20220816 13:15:21.164" endtime="20220816 13:15:21.172"/>
</kw>
<tag>post</tag>
<status status="PASS" starttime="20220816 13:15:20.468" endtime="20220816 13:15:21.172"/>
</test>
<doc>Suite de testes POST</doc>
<status status="PASS" starttime="20220816 13:14:56.559" endtime="20220816 13:15:21.174"/>
</suite>
<suite id="s1-s1-s5" name="TestPutUser" source="H:\WWW\TESTES-QA\GETNET\challenge_getnet_api\getnet_api_robot\suitesTests\TestPutUser.robot">
<test id="s1-s1-s5-t1" name="Deve Atualizar o cadastro do usuário dado name e job então retorna status 200" line="8">
<kw name="Dado o endereço da API" library="stepPUT">
<kw name="Start Session" library="base">
<kw name="Create Session" library="RequestsLibrary">
<arg>GETNET_API_ROBOT</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220816 13:15:21.195" level="INFO">Creating Session using : alias=GETNET_API_ROBOT, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20220816 13:15:21.195" endtime="20220816 13:15:21.197"/>
</kw>
<status status="PASS" starttime="20220816 13:15:21.194" endtime="20220816 13:15:21.198"/>
</kw>
<status status="PASS" starttime="20220816 13:15:21.194" endtime="20220816 13:15:21.198"/>
</kw>
<kw name="Quando realizar uma requisição alterando o cadastro do usuário para name: Davi Lucca , Job: ADM" library="stepPUT" sourcename="Quando realizar uma requisição alterando o cadastro do usuário para name: ${name} , Job: ${job}">
<kw name="PUT" library="REST">
<arg>${ENDPOINT_UPDATE}</arg>
<arg>{"name": "${name}", "job": "${job}"}</arg>
<tag>http</tag>
<doc>*Sends a PUT request to the endpoint.*</doc>
<status status="PASS" starttime="20220816 13:15:21.199" endtime="20220816 13:15:21.900"/>
</kw>
<status status="PASS" starttime="20220816 13:15:21.199" endtime="20220816 13:15:21.900"/>
</kw>
<kw name="Então a API irá retornar os dados alterados respondendo o código 200" library="stepPUT">
<kw name="Validate status code 200" library="stepPUT">
<kw name="Integer" library="REST">
<arg>response status</arg>
<arg>200</arg>
<tag>assertions</tag>
<doc>*Asserts the field as JSON integer.*</doc>
<status status="PASS" starttime="20220816 13:15:21.902" endtime="20220816 13:15:21.903"/>
</kw>
<kw name="Output" library="REST">
<arg>response status</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:15:21.904" level="INFO">
200</msg>
<status status="PASS" starttime="20220816 13:15:21.903" endtime="20220816 13:15:21.906"/>
</kw>
<kw name="Output" library="REST">
<arg>$</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20220816 13:15:21.907" level="INFO">
{
    "name": "Davi Lucca",
    "job": "ADM",
    "updatedAt": "2022-08-16T16:15:23.192Z"
}</msg>
<status status="PASS" starttime="20220816 13:15:21.906" endtime="20220816 13:15:21.909"/>
</kw>
<status status="PASS" starttime="20220816 13:15:21.902" endtime="20220816 13:15:21.909"/>
</kw>
<status status="PASS" starttime="20220816 13:15:21.901" endtime="20220816 13:15:21.910"/>
</kw>
<tag>put</tag>
<status status="PASS" starttime="20220816 13:15:21.192" endtime="20220816 13:15:21.910"/>
</test>
<doc>Suite de testes PUT</doc>
<status status="PASS" starttime="20220816 13:15:21.177" endtime="20220816 13:15:21.912"/>
</suite>
<status status="PASS" starttime="20220816 13:13:43.702" endtime="20220816 13:15:21.916"/>
</suite>
<status status="PASS" starttime="20220816 13:13:43.669" endtime="20220816 13:15:21.919"/>
</suite>
<statistics>
<total>
<stat pass="15" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">delete</stat>
<stat pass="7" fail="0" skip="0">get</stat>
<stat pass="1" fail="0" skip="0">patch</stat>
<stat pass="5" fail="0" skip="0">post</stat>
<stat pass="1" fail="0" skip="0">put</stat>
</tag>
<suite>
<stat pass="15" fail="0" skip="0" id="s1" name="Getnet Api Robot">Getnet Api Robot</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1" name="suitesTests">Getnet Api Robot.suitesTests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="TestDeleteUser">Getnet Api Robot.suitesTests.TestDeleteUser</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1-s2" name="TestGetUser">Getnet Api Robot.suitesTests.TestGetUser</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="TestPatchUser">Getnet Api Robot.suitesTests.TestPatchUser</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s4" name="TestPostUser">Getnet Api Robot.suitesTests.TestPostUser</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="TestPutUser">Getnet Api Robot.suitesTests.TestPutUser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
